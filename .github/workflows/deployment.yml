# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Maven project
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build project
      run: mvn clean install
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: target/wvv-app-0.0.1-SNAPSHOT.jar
  deploy: 
    runs-on: ubuntu-latest  
    needs: build 
    name: Build Docker image and deploy to server
    steps:
    - uses: actions/checkout@v1
    - name: Download Maven build artifact
      uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: Build Docker image
      run: |
        mkdir -p target
        mv artifact/wvv-app-0.0.1-SNAPSHOT.jar target/
        docker build -t floge77/back-end-wvv:latest .
    - name: Push Docker image
      run: |
          echo "${{ secrets.DOCKER_PW }}" | docker login docker.io -u "${{ secrets.DOCKER_USER }}" --password-stdin
          docker push floge77/back-end-wvv:latest
  deploy-to-server:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIV_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker ps -q --filter "name=virus" | grep -q . && docker stop virus
            docker pull floge77/back-end-wvv
            docker run -d -p 50123:50123 --name virus --rm --network wvv -v ~/back-end-wvv/config:/config -e SPRING_PROFILES_ACTIVE=dev floge77/back-end-wvv
